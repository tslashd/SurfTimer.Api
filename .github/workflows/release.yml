name: Release API (linux-x64 & win-x64)

on:
  push:
    tags:
      - "v*.*.*"          # trigger automatically for tags like v1.2.3
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (e.g., v1.2.3)"
        required: true
        default: "v0.0.0"

permissions:
  contents: write   # required to create and upload releases


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rid: [ linux-x64, win-x64 ]

    steps:
      - name: Resolve release tag
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${{ github.ref_name }}"
          fi

          if ! echo "$TAG" | grep -Eq '^v[0-9]'; then
            echo "Tag must start with 'v' (e.g., v1.2.3). Got: $TAG"
            exit 1
          fi

          echo "RELEASE_TAG=$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Checkout API repository
        uses: actions/checkout@v5
        with:
          path: SurfTimer.Api
          ref: ${{ env.RELEASE_TAG }}

      - name: Checkout Shared repository
        uses: actions/checkout@v5
        with:
          repository: tslashd/SurfTimer.Shared
          path: SurfTimer.Shared
          # If SurfTimer.Shared is private:
          # token: ${{ secrets.SHARED_REPO_PAT }}
          # Optionally pin a version/tag:
          # ref: v1.2.3

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.0.x

      - name: Restore
        run: dotnet restore SurfTimer.Api/SurfTimer.Api.sln

      - name: Build
        run: dotnet build SurfTimer.Api/SurfTimer.Api.sln -c Release --no-restore

      - name: Publish (${{ matrix.rid }})
        env:
          OUT_DIR: out/${{ matrix.rid }}
        run: |
          dotnet publish SurfTimer.Api/SurfTimer.Api.csproj \
            -c Release \
            -o "$OUT_DIR" \
            -r ${{ matrix.rid }} \
            --self-contained false \
            /p:PublishSingleFile=false \
            /p:PublishTrimmed=false

          echo "Listing publish output:"
          ls -la "$OUT_DIR"

      - name: Validate DLLs (${{ matrix.rid }})
        env:
          OUT_DIR: out/${{ matrix.rid }}
        run: |
          test -f "$OUT_DIR/SurfTimer.Api.dll" || (echo "Missing SurfTimer.Api.dll" && exit 1)
          test -f "$OUT_DIR/SurfTimer.Shared.dll" || (echo "Missing SurfTimer.Shared.dll" && exit 1)

      - name: Package ZIP (${{ matrix.rid }})
        env:
          OUT_DIR: out/${{ matrix.rid }}
        run: |
          cd "$OUT_DIR"
          zip -r "../../SurfTimer.Api-${RELEASE_TAG}-${{ matrix.rid }}.zip" .
          cd - >/dev/null
          sha256sum "SurfTimer.Api-${RELEASE_TAG}-${{ matrix.rid }}.zip" > "SurfTimer.Api-${RELEASE_TAG}-${{ matrix.rid }}.zip.sha256"

      - name: Upload artifact (${{ matrix.rid }})
        uses: actions/upload-artifact@v4
        with:
          name: SurfTimer.Api-${{ env.RELEASE_TAG }}-${{ matrix.rid }}
          path: |
            SurfTimer.Api-${{ env.RELEASE_TAG }}-${{ matrix.rid }}.zip
            SurfTimer.Api-${{ env.RELEASE_TAG }}-${{ matrix.rid }}.zip.sha256

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts

      - name: Determine tag
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${{ github.ref_name }}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "RELEASE_TAG=$TAG" >> $GITHUB_ENV

      - name: List artifacts
        run: ls -R ./artifacts

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: SurfTimer.Api ${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: ${{ contains(steps.vars.outputs.tag, '-rc') || contains(steps.vars.outputs.tag, '-beta') || contains(steps.vars.outputs.tag, '-alpha') }}
          files: |
            artifacts/SurfTimer.Api-${{ env.RELEASE_TAG }}-linux-x64/SurfTimer.Api-${{ env.RELEASE_TAG }}-linux-x64.zip
            artifacts/SurfTimer.Api-${{ env.RELEASE_TAG }}-linux-x64/SurfTimer.Api-${{ env.RELEASE_TAG }}-linux-x64.zip.sha256
            artifacts/SurfTimer.Api-${{ env.RELEASE_TAG }}-win-x64/SurfTimer.Api-${{ env.RELEASE_TAG }}-win-x64.zip
            artifacts/SurfTimer.Api-${{ env.RELEASE_TAG }}-win-x64/SurfTimer.Api-${{ env.RELEASE_TAG }}-win-x64.zip.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
